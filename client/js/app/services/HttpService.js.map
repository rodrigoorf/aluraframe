{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAI;AACd,4BAAG,CAACA,IAAIC,EAAR,EAAW;AACP,kCAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH,yBAFD,MAEO;AACH,mCAAOH,GAAP;AACH;AACJ;;;wCAEGI,G,EAAI;AAAA;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAAOC,MAAMD,GAAN,EAAWE,IAAX,CAAgB;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBAAhB,EAAgDM,IAAhD,CAAqD;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAArD,CAAP;AACH;;;yCAEIJ,G,EAAKK,I,EAAK;AAAA;;AACX,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS;AACL,gDAAgB;AADX,6BADK;AAIdC,oCAAQ,MAJM;AAKdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AALQ,yBAAX,EAMJH,IANI,CAMC;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBAND,CAAP;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n    \r\n    _handleErrors(res){\r\n        if(!res.ok){\r\n            throw new Error(res.statusText);\r\n        } else {\r\n            return res;\r\n        }\r\n    }\r\n\r\n    get(url){\r\n        // return new Promise((resolve, reject) => {\r\n        //     let xhr = new XMLHttpRequest();\r\n        //     xhr.open(\"GET\", url);\r\n        //     xhr.onreadystatechange = () => {\r\n        //         if (xhr.readyState == 4) {\r\n        //             if (xhr.status == 200) {\r\n        //                 resolve(JSON.parse(xhr.responseText));\r\n        //             } else {\r\n        //                 reject(xhr.responseText);\r\n        //             }\r\n        //         }\r\n        //     };\r\n        //     xhr.send();\r\n        // });\r\n        return fetch(url).then(res => this._handleErrors(res)).then(res => res.json());\r\n    }\r\n\r\n    post(url, dado){\r\n        return fetch(url, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'post',\r\n            body: JSON.stringify(dado)\r\n        }).then(res => this._handleErrors(res));\r\n        // return new Promise((resolve, reject) => {\r\n        //     let xhr = new XMLHttpRequest();\r\n        //     xhr.open(\"POST\", url, true);\r\n        //     xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        //     xhr.onreadystatechange = () => {\r\n        //         if(xhr.readyState == 4){\r\n        //             if(xhr.status == 200){\r\n        //                 resolve(JSON.parse(xhr.responseText));\r\n        //             } else {\r\n        //                 reject(xhr.responseText);\r\n        //             }\r\n        //         }\r\n        //     };\r\n        //     xhr.send(JSON.stringify(dado));\r\n        // });\r\n    }\r\n}"]}