{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(), \r\n            this.obterNegociacoesDaSemanaAnterior(), \r\n            this.obterNegociacoesDaSemanaRetrasada()]\r\n        ).then(periodos => {\r\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n        // return new Promise((resolve, reject) => {\r\n            return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))})\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });\r\n        // });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n        // return new Promise((resolve, reject) => {\r\n            return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))})\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });\r\n        // });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        // return new Promise((resolve, reject) => {\r\n            return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))})\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });\r\n        // });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory.getConnection().then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.adiciona(negociacao)).then(() => 'Negociação adicionada com sucesso')\r\n        .catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível adicionar a negociação');\r\n        });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory.getConnection().then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.listaTodos()).catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível obter as negociações');\r\n        });\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory.getConnection().then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos()).then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações');\r\n            });\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes().then(negociacoes => negociacoes.filter(negociacao => \r\n            !listaAtual.some(negociacaoExistente => \r\n                negociacao.isEquals(negociacaoExistente))\r\n        )).catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível buscar negociações para importar')\r\n        })\r\n    }\r\n}"]}